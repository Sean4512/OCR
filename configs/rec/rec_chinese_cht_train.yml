Global:
  use_gpu: True
  epoch_num: 500
  log_smooth_window: 20
  print_batch_step: 10
  save_model_dir: ./output/rec_chinese_cht
  save_epoch_step: 5
  # evaluation is run every 2000 iterations after the 0th iteration
  eval_batch_step: [1000, 2000]
  cal_metric_during_train: True
  pretrained_model: ./pretrain_models/chinese_cht_mobile_v2.0_rec_train/best_accuracy
  checkpoints:       # 加载模型参数路径，用于中断后加载参数继续训练
  save_inference_dir:
  use_visualdl: False  # 设置是否启用visualdl进行可视化log展示
  infer_img: ./doc/imgs_words/chinese_traditional/chinese_cht_1.png  # 设置预测图像路径或文件夹路径
  # for data or label process
  character_dict_path: ./ppocr/utils/dict/chinese_cht_dict.txt
  character_type: chinese_cht
  max_text_length: 30
  infer_mode: False
  use_space_char: True
  # label_list: ['0','180'] # 设置方向分类器支持的角度
  use_visualdl : True
  save_res_path: ./output/rec_chinese_cht/predicts_chinese_cht.txt


Optimizer:
  name: Adam
  beta1: 0.9
  beta2: 0.999
  lr:
    name: Cosine
    learning_rate: 0.001
  regularizer:
    name: 'L2'
    factor: 0.00004

Architecture:
  model_type: rec
  algorithm: CRNN
  Transform:
  Backbone:
    name: ResNet
    layers: 34
  Neck:
    name: SequenceEncoder
    encoder_type: rnn  # SequenceEncoder编码器类型
    hidden_size: 256
  Head:
    name: CTCHead
    fc_decay: 0.00004

Loss: 
  name: CTCLoss  # 网络loss类名 (目前支持CTCLoss,DBLoss,ClsLoss)
  # balance_loss: True  # DBLossloss中是否对正负样本数量进行均衡(使用OHEM)

PostProcess:
  name: CTCLabelDecode

Metric:
  name: RecMetric
  main_indicator: acc

Train:
  dataset:
    name: SimpleDataSet
    data_dir: ./data/
    label_file_list:
      - ./data/crop_img_train/rec_gt_train.txt
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - RecAug: 
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: True
    batch_size_per_card: 32
    drop_last: True
    num_workers: 8

Eval:
  dataset:
    name: SimpleDataSet
    data_dir: ./data/
    label_file_list:
      - ./data/crop_img_test/rec_gt_test.txt
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: False
    drop_last: False
    batch_size_per_card: 32
    num_workers: 8